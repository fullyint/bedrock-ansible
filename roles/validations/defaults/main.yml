# A validation will fail if any condition listed is true

minimum_ansible_version: 2.0.1.0
site: '' # `site` defined anywhere else (including extra-vars) will take priority over this

validate_ansible_version:
  name: Unsupported Ansible version
  playbooks: all
  conditions:
    - "{{ ansible_version is not defined }}"
    - "{{ ansible_version.full | version_compare(minimum_ansible_version, '<') }}"
  msg: ansible_version.j2

validate_sites_in_vault:
  name: Site(s) missing from `vault.yml`
  playbooks: all
  conditions:
    - "{{ unvaulted_sites | count != 0 }}"
  msg: sites_in_vault.j2

validate_sudo_user:
  name: No sudo user
  playbooks: server.yml
  conditions:
    - "{{ admin_user not in (users | map(attribute='name') | list) }}"
    - "{% for user in users if user.name == admin_user %}{{ 'sudo' not in user.groups }}{% endfor %}"
    - "{{ env != 'development' and admin_user not in sudoer_passwords.keys() }}"
  msg: sudo_user.j2
  when: "{{ admin_user != 'root' and not sshd_permit_root_login | bool | default(false) }}"

validate_admin_user_is_not_root:
  name: "`admin_user` must not be `root`"
  playbooks: server.yml
  conditions:
    - "{{ admin_user == 'root' }}"
  msg: admin_user_is_not_root.j2
  when: "{{ not sshd_permit_root_login | bool | default(false) }}"

validate_web_user_is_not_root:
  name: "`web_user` must not be `root`"
  playbooks: server.yml deploy.yml
  conditions:
    - "{{ web_user == 'root' }}"
  msg: web_user_is_not_root.j2

validate_site_variable:
  name: Invalid `site` variable
  playbooks: deploy.yml rollback.yml
  conditions:
    - "{{ site not in wordpress_sites }}"
  msg: site_variable.j2

validate_repo_definition:
  name: Invalid `repo` definition
  playbooks: deploy.yml
  conditions:
    - '{% if site in wordpress_sites %}{{ not wordpress_sites[site].repo | default("") | match(".*@.*:.*\.git") }}{% endif %}'
  msg: repo_definition.j2
  when: "{{ site in wordpress_sites }}"

validate_repo_customized:
  name: "`repo` definition must be customized"
  playbooks: deploy.yml
  conditions:
    - "{% if site in wordpress_sites %}{{ wordpress_sites[site].repo | default('') == 'git@github.com:example/example.com.git' }}{% endif %}"
  msg: repo_customized.j2
  when: "{{ site in wordpress_sites }}"

validate_one_env_group_only:
  name: Host name is in multiple environment groups
  playbooks: all
  conditions:
    - "{{ ['development', 'staging', 'production'] | difference(env) | difference(group_names) | count != 2 }}"
  msg: one_env_group_only.j2
