---
- name: Check for composer.json in project root or project_subtree_path
  stat:
    path: "{{ deploy_helper.new_release_path }}/composer.json"
  register: composer_json

- name: Fail if composer.json not found
  fail:
    msg: "Unable to find a `composer.json` file in the root of '{{ deploy_helper.new_release_path }}'. Make sure your repo has a `composer.json` file in its root or edit `repo_subtree_path` for '{{ site }}' in `wordpress_sites.yml` so it points to the directory with a `composer.json` file."
  when: not composer_json.stat.exists

- name: Setup packagist.com authentication
  composer:
    command: config
    arguments: --auth http-basic.repo.packagist.com token {{ project.packagist_token }}
    working_dir: "{{ deploy_helper.new_release_path }}"
  no_log: true
  when: project.packagist_token is defined

- name: Install Composer dependencies
  composer:
    no_scripts: yes
    working_dir: "{{ deploy_helper.new_release_path }}"

- block:
  - name: Find static assets
    find:
      paths: "{{ project.static_asset_paths | default(static_asset_paths) | map('regex_replace', '(.*)', item.1 + '/web/\\1') | list }}"
      patterns: "*.{{ project.static_asset_extensions | default(static_asset_extensions) | join(gz + ',*.') }}{{ gz }}"
      recurse: yes
      size: 256
      get_checksum: yes
    when: project.gzip_assets_on_deploy | default(gzip_assets_on_deploy)
    register: static_assets_raw
    with_indexed_items:
      - "{{ deploy_helper.new_release_path }}"
      - "{{ deploy_helper.current_path }}"
      - "{{ deploy_helper.current_path }}"
    vars:
      gz: "{{ (item.0 == 2) | ternary('.gz', '') }}"

  - name: set vars
    set_fact:
      files_to_copy: "{{ files_to_copy | select('search', static_asset_pattern) | list }}"
      files_to_compress: "{{ new_checksums.keys() | difference(files_to_copy) | select('search', static_asset_pattern) | list }}"
      available_gzips: "{{ available_gzips }}"
    vars:
      new_checksums: "{ {% for file in static_assets_raw.results.0.files %}'{{ file.path[(deploy_helper.new_release_path | length + 1):] }}': '{{ file.checksum }}', {% endfor %} }"
      old_checksums: "{ {% for file in static_assets_raw.results.1.files %}'{{ file.path[(deploy_helper.current_path | length + 1):] }}': '{{ file.checksum }}', {% endfor %} }"
      available_gzips: "[ {% for file in static_assets_raw.results.2.files %}'{{ file.path[(deploy_helper.current_path | length + 1):-3] }}', {% endfor %} ]"
      files_to_copy: "[ {% for file,checksum in new_checksums.iteritems() if file in available_gzips and old_checksums[file] | default('') == checksum %}'{{ file }}', {% endfor %} ]"

  - name: Copy unchanged static assets
    copy:
      src: "{{ deploy_helper.current_path }}/{{ item | quote }}.gz"
      dest: "{{ deploy_helper.new_release_path }}/{{ item | quote }}.gz"
      remote_src: yes
    with_items: "{{ files_to_copy }}"

  - name: Gzip changed static assets
    shell: "gzip --best --keep --force {{ files_to_compress | map('quote') | join(' ') }}"
    args:
      chdir: "{{ deploy_helper.new_release_path }}"
    when: files_to_compress | count

  when: project.gzip_assets_on_deploy | default(gzip_assets_on_deploy)
