# Documentation: https://roots.io/trellis/docs/security/
# Which components to generate the configuration files for.
# If remote machine doesn't have an SSH server then change the ssh_client_hardening to false.
ssh_client_hardening: true              # SSH
ssh_server_hardening: true              # SSHD

# Set to true if CBC mode ciphers are required.
ssh_client_cbc_required: false          # SSH
ssh_server_cbc_required: false          # SSHD

# Ciphers to allow.
ssh_ciphers_default:                    # SSHD + SSH
  - chacha20-poly1305@openssh.com
  - aes256-gcm@openssh.com
  - aes128-gcm@openssh.com
  - aes256-ctr
  - aes192-ctr
  - aes128-ctr

# Additional ciphers to allow when `*_cbc_required: true`.
ssh_ciphers_weak:                       # SSHD + SSH
  - aes256-cbc
  - aes192-cbc
  - aes128-cbc

# Set to true if weaker HMAC mechanisms are required.
ssh_client_weak_hmac: false             # SSH
ssh_server_weak_hmac: false             # SSHD

# MACs to make available.
ssh_macs_default:                       # SSHD + SSH
  - hmac-sha2-512-etm@openssh.com
  - hmac-sha2-256-etm@openssh.com
  - hmac-ripemd160-etm@openssh.com
  - umac-128-etm@openssh.com
  - hmac-sha2-512
  - hmac-sha2-256
  - hmac-ripemd160

# Additional MACs to make available when `*_weak_hmac: true`.
ssh_macs_weak:                          # SSHD + SSH
  - umac-128@openssh.com
  - hmac-sha1

# Set to true if weaker Key-Exchange (KEX) mechanisms are required.
ssh_client_weak_kex: false              # SSH
ssh_server_weak_kex: false              # SSHD

# KEX algorithms to make available.
ssh_kex_default:                        # SSHD + SSH
  - curve25519-sha256@libssh.org
  - diffie-hellman-group-exchange-sha256

# Additional KEX algorithms to make available when `*_weak_kex: true`.
ssh_kex_weak:                           # SSHD + SSH
  - diffie-hellman-group14-sha1
  - diffie-hellman-group-exchange-sha1
  - diffie-hellman-group1-sha1

# Set to true to allow logins with passwords.
ssh_client_password_login: false        # SSH
ssh_server_password_login: false        # SSHD

# Set to `true` if IPv6 is needed.
network_ipv6_enable: false              # SSHD + SSH

# Port to which ssh-client should connect.
ssh_client_port: 22                     # SSH

# Ports on which ssh-server should listen.
ssh_server_ports:                       # SSHD
  - 22

# IP addresses which ssh-server should listen to. Use to create a secure whitelist.
ssh_listen_to:                          # SSHD
  - 0.0.0.0

# Policy on adding keys to the `known_hosts` file.
ssh_strict_hostkey_checking: ask        # SSH

# SSH key files the client should try.
ssh_identity_files:                     # SSH
  - ~/.ssh/id_ed25519
  - ~/.ssh/id_rsa

# Host keys the server should use.
ssh_host_key_files:                     # SSHD
  - /etc/ssh/ssh_host_ed25519_key
  - /etc/ssh/ssh_host_rsa_key

# Specifies the host key algorithms that the client wants to use, in order of preference.
ssh_host_key_algorithms:                # SSH
  - ssh-ed25519-cert-v01@openssh.com
  - ssh-rsa-cert-v01@openssh.com
  - ssh-ed25519
  - ssh-rsa

# Specifies the maximum number of authentication attempts permitted per connection.
# Once the number of failures reaches half this value, additional failures are logged.
ssh_max_auth_retries: 6                 # SSHD

# Number of seconds of inactivity before server should send client a keepalive message.
ssh_client_alive_interval: 600          # SSHD

# Number of keepalive messages server should send without response before disconnecting.
ssh_client_alive_count: 3               # SSHD

# Example hosts with custom options.
# ssh_remote_hosts:
#   - names:
#       - example.com
#       - example2.com
#     options:
#       - Port 2222
#       - ForwardAgent yes
#   - names:
#       - example3.com
#     options:
#       - StrictHostKeyChecking no
ssh_remote_hosts: []                    # SSH

# Set to false to disable root login altogether.
ssh_allow_root_with_key: true           # SSHD

# Set to true to allow TCP forwarding.
ssh_allow_tcp_forwarding: false         # SSHD

# Set to false to disable agent forwarding.
ssh_allow_agent_forwarding: true        # SSHD

# PAM authentication enabled to avoid Debian bug with openssh-server.
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=751636
# can change to `false` once Canonical Main repository includes openssh 1:7.2p2-6
ssh_use_pam: true                       # SSHD

# Login is disallowed for user names that match one of the patterns.
ssh_deny_users: []                      # SSHD

# Login is allowed only for user names that match one of the patterns.
ssh_allow_users: []                     # SSHD

# Login is disallowed for users whose primary group or supplementary group list matches one of the patterns.
ssh_deny_groups: []                     # SSHD

# Login is allowed only for users whose primary group or supplementary group list matches one of the patterns.
ssh_allow_groups: []                    # SSHD

# Set to true to enable printing the MOTD.
ssh_print_motd: false                   # SSHD

# Set to true for login to display info from previous login.
ssh_print_last_log: false               # SSHD

# Set to true to display /etc/ssh/banner.txt before authentication is allowed.
ssh_banner: false                       # SSHD

# Set to false to disable distribution version leakage during initial protocol handshake.
ssh_print_debian_banner: false          # SSHD

# List of environment variables the ssh-client should send to the remote server.
ssh_send_env: []                        # SSH

# List of environment variables sent by the client that will be copied into the ssh-server's session environ.
ssh_accept_env: []                      # SSHD

# Set to false to disable SFTP configuration.
# If `sftp_enabled: false`, add `scp_if_ssh = True` in ansible.cfg
# so that Ansible will use SCP to copy files instead of the default SFTP.
sftp_enabled: true                      # SSHD

# Change default SFTP chroot location.
sftp_chroot_dir: /home/%u               # SSHD

# Enable experimental client roaming.
ssh_client_roaming: false               # SSH

use_privilege_separation: sandbox       # SSHD
